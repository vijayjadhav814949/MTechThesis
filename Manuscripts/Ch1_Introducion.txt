==========Angular 2

Angular 2 is a open-source front-end web application framework used for developing single page applications (SPAs). It uses typescript language to develope applications which are transpiled into javascript to be run inside browsers and other supporting entities. Angular 2 aims to simplfy development and testing of its applications by providing a framework for client-side Model-View-Controller(MVC) architecture. The Angular 2 framework works by first reading the HTML page, which has embedded into it additional custom tag attributes. Angular interprets those attributes as directives to bind input or output parts of the page to a model that is represented by standard JavaScript variables.




====>difference between angularjs and angular2

	Angular 2 is a completely rewritten version of AngularJS. Few of the differences have staed below.
 

Angular does not have a concept of "scope" or controllers, instead it uses a hierarchy of components as its main architectural concept
Angular has a simpler expression syntax, focusing on "[ ]" for property binding, and "( )" for event binding
Mobile development – desktop development is much easier when mobile performance issues are handled first
Modularity – much core functionality has moved to modules, producing a lighter, faster core
Modern browsers only – reducing the need for browser compatibility workarounds
Language - Angular 2 uses typescript to write applications, where as AngularJS uses javascript. TypeScript is a superset of JavaScript.
Improved dependency injection – bindings make it possible for dependencies to be named
Asynchronous template compilation


==========REST

Representational state transfer (REST) or RESTful Web services are one way of providing interoperability between computer systems on the Internet. REST-compliant Web services allow requesting systems to access and manipulate textual representations of Web resources using a uniform and predefined set of stateless operations.
[ "Web Services Architecture". World Wide Web Consortium. 11 February 2004. 3.1.3 Relationship to the World Wide Web and REST Architectures. Retrieved 29 September 2016.]
In a RESTful Web service, requests made to a resource's URI will elicit a response that may be in XML, HTML, JSON or some other defined format. The response may confirm that some alteration has been made to the stored resource, and it may provide hypertext links to other related resources or collections of resources. Using HTTP, as is most common, the kind of operations available include those predefined by the HTTP verbs GET, POST, PUT, DELETE and so on.






==========HTTP

HTTP functions as a request–response protocol in the client–server computing model. A web browser, for example, may be the client and an application running on a computer hosting a website may be the server. The client submits an HTTP request message to the server. RESTful Web services are mostly exposed through HTTP request-response stateless sessions. RESTful services use HTTP methods to specify the type request. (eg. CRUD : Create Read Update or Delete).


===>methods
GET
The GET method requests a representation of the specified resource. Requests using GET should only retrieve data and should have no other effect.
HEAD
The HEAD method asks for a response identical to that of a GET request, but without the response body. This is useful for retrieving meta-information written in response headers, without having to transport the entire content.
POST
The POST method requests that the server accept the entity enclosed in the request as a new subordinate of the web resource identified by the URI. The data POSTed might be, for example, an annotation for existing resources; a message for a bulletin board, newsgroup, mailing list, or comment thread; a block of data that is the result of submitting a web form to a data-handling process; or an item to add to a database. [ "POST". p. 54. sec. 9.5. RFC 2616.]
PUT
The PUT method requests that the enclosed entity be stored under the supplied URI. If the URI refers to an already existing resource, it is modified; if the URI does not point to an existing resource, then the server can create the resource with that URI.[ "PUT". p. 55. sec. 9.6. RFC 2616.]
DELETE
The DELETE method deletes the specified resource.
TRACE
The TRACE method echoes the received request so that a client can see what (if any) changes or additions have been made by intermediate servers.
OPTIONS
The OPTIONS method returns the HTTP methods that the server supports for the specified URL. This can be used to check the functionality of a web server by requesting '*' instead of a specific resource.
PATCH
The PATCH method applies partial modifications to a resource.[Dusseault, Lisa; Snell, James M. (March 2010). PATCH Method for HTTP. IETF. RFC 5789.]



==========Observables

map 
subscribe

==========Typescript/Javascript
==========JSON